# vim:ft=zsh

export TERM="xterm-256color"
export EDITOR="nvim"

# User directories
[ -z $XDG_CONFIG_HOME ] && export XDG_CONFIG_HOME="$HOME"/.config
[ -z $XDG_CACHE_HOME ] && export XDG_CACHE_HOME="$HOME"/.cache
[ -z $XDG_DATA_HOME ] && export XDG_DATA_HOME="$HOME"/.local/share
[ -z $XDG_STATE_HOME ] && export XDG_STATE_HOME="$HOME"/.local/state

# System directories
[ -z $XDG_DATA_DIRS ] && export XDG_DATA_DIRS="/usr/local/share:/usr/share"
[ -z $XDG_CONFIG_DIRS ] && export XDG_CONFIG_DIRS="/etc/xdg"

# Create VIM directories
mkdir -p "$XDG_CACHE_HOME"/vim/{undo,swap,backup} >/dev/null
mkdir -p "$XDG_CONFIG_HOME"/pg && mkdir -p "$XDG_STATE_HOME"

# XDG Specs

# Config dirs
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
export CABAL_CONFIG="$XDG_CONFIG_HOME"/cabal/config
export SCREENRC="$XDG_CONFIG_HOME"/screen/screenrc
export SPACEMACSDIR="$XDG_CONFIG_HOME"/spacemacs
export TEXMFCONFIG="$XDG_CONFIG_HOME"/texlive/texmf-config
export WGETRC="$XDG_CONFIG_HOME"/wgetrc
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME"/bundle
export XCOMPOSEFILE="$XDG_CONFIG_HOME"/X11/xcompose
export PARALLEL_HOME="$XDG_CONFIG_HOME"/parallel
export OMNISHARPHOME="$XDG_CONFIG_HOME"/omnisharp
export ELM_HOME="$XDG_CONFIG_HOME"/elm

# Cache dirs
export CABAL_DIR="$XDG_CACHE_HOME"/cabal
export TEXMFVAR="$XDG_CACHE_HOME"/texlive/texmf-var
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME"/bundle
export XCOMPOSECACHE="$XDG_CACHE_HOME"/X11/xcompose
export NUGET_PACKAGES="$XDG_CACHE_HOME"/NuGetPackages

# Data dirs
export PNPM_HOME="$XDG_DATA_HOME"/pnpm
export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
export STACK_ROOT="$XDG_DATA_HOME"/stack
export GOPATH="$XDG_DATA_HOME"/go
export CARGO_HOME="$XDG_DATA_HOME"/cargo
export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
export PYENV_ROOT="$XDG_DATA_HOME"/pyenv
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME"/bundle
export TEXMFHOME="$XDG_DATA_HOME"/texmf
export TERMINFO="$XDG_DATA_HOME"/terminfo
export TERMINFO_DIRS="$XDG_DATA_HOME"/terminfo:/usr/share/terminfo
export RBENV_ROOT="$XDG_DATA_HOME"/rbenv
export SQLITE_HISTORY="$XDG_DATA_HOME"/sqlite_history
export OPAMROOT="$XDG_DATA_HOME"/opam

# Other
export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority
export PYTHONSTARTUP="$HOME"/.local/bin/startup.py

# wgetrc does not support environment variables
grep hsts-file $WGETRC &>/dev/null || {
  echo hsts-file \= "$XDG_CACHE_HOME"/wget-hsts >>"$XDG_CONFIG_HOME"/wgetrc
}

# Non-compliant >:(
export DOTNET_TOOLS="$HOME"/.dotnet/tools

command -v realpath >/dev/null 2>&1 && {
  which dotnet >/dev/null
  [ $? = 0 ] && {
    export DOTNET_CLI_TELEMETRY_OPTOUT=1
    export DOTNET_ROOT="$(dirname $(realpath $(which dotnet)))"
  }
}

add_to_path() {
  case :$PATH: in
  *:$1:*) ;; # do nothing, it's there
  *) export PATH="$1:$PATH" ;;
  esac
}

add_to_path "$PYENV_ROOT/bin"
add_to_path "/usr/local/go/bin"
add_to_path "/usr/local/bin"
add_to_path "$PNPM_HOME"
add_to_path "$GOPATH/bin"
add_to_path "$DENO_INSTALL/bin"
add_to_path "$XDG_DATA_HOME/npm/bin"
add_to_path "$HOME/.local/bin"
add_to_path "$CARGO_HOME/bin"
add_to_path "$DOTNET_TOOLS"
add_to_path "$HOME/.local/zig"
add_to_path "$HOME/.luarocks/bin"
add_to_path "$DOTNET_ROOT"
